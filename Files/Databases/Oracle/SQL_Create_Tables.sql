-- Table Customers
CREATE TABLE Customers (
    Customer_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(25),
    Address VARCHAR2(50) NOT NULL,
    Postal_Code VARCHAR2(15) NOT NULL,
    NIF VARCHAR2(15) NOT NULL,
    Email VARCHAR2(35) NOT NULL UNIQUE,
    Account_ID NUMBER NOT NULL UNIQUE,
    Password_Hash VARCHAR2(20) NOT NULL,
    GDPR_Terms CLOB NOT NULL,
    Accepted_Date DATE NOT NULL,
    Points_Balance NUMBER DEFAULT 0,
    Last_Points_Redeemed_date DATE,
    Status VARCHAR2(10) NOT NULL CHECK (Status IN ('new', 'active', 'blocked', 'prohibited'))
);

-- Table Employees
CREATE TABLE Employees (
    Employee_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(25) NOT NULL,
    Account_ID VARCHAR2(20) NOT NULL UNIQUE,
    Email VARCHAR2(35) NOT NULL UNIQUE,
    Password_Hash VARCHAR2(20) NOT NULL,
    Role VARCHAR2(15) NOT NULL
);

-- Table Items
CREATE TABLE Items (
    Item_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(20),
    Description VARCHAR2(50) NOT NULL,
    Brand VARCHAR2(20) NOT NULL,
    Type VARCHAR2(20) NOT NULL CHECK (Type IN ('Service', 'Product')),
    Primary_Supplier_ID NUMBER NOT NULL,
    Purchase_Price NUMBER NOT NULL,
    Sales_Price NUMBER NOT NULL
);

-- Table OrderItem
CREATE TABLE OrderItem (
    Order_Item_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FK_Item_ID NUMBER NOT NULL,
    FK_Order_ID NUMBER NOT NULL,
    Quantity NUMBER NOT NULL,
    Price NUMBER NOT NULL
);

-- Table Orders
CREATE TABLE Orders (
    Order_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Customer_ID NUMBER NOT NULL,
    Delivery_Address VARCHAR2(25) NOT NULL,
    Status VARCHAR2(15) NOT NULL CHECK (Status IN ('accepted', 'suspended')),
    Checkout_Total NUMBER NOT NULL,
    Payment_Status VARCHAR2(15) NOT NULL,
    Shipping_Status VARCHAR2(15) NOT NULL CHECK (Shipping_Status IN ('in transit', 'delivered'))
);

-- Table Products
CREATE TABLE Products (
    Product_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Product_Warehouse_ID NUMBER NOT NULL,
    Product_Zone_ID NUMBER NOT NULL,
    Quantity_in_Stock NUMBER NOT NULL,
    Minimum_Stock NUMBER NOT NULL,
    Price NUMBER NOT NULL,
    Category VARCHAR2(15) NOT NULL,
    Subcategory VARCHAR2(15) NOT NULL,
    Discount NUMBER
);

-- Table ProductPrices
CREATE TABLE ProductPrices (
    Product_ID NUMBER NOT NULL,
    Price NUMBER NOT NULL,
    Initial_Date DATE NOT NULL,
    Final_Date DATE NOT NULL,
    CONSTRAINT PK_ProductPrices PRIMARY KEY (Product_ID, Price)
);

-- Table Services
CREATE TABLE Services (
    Service_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Max_Execution_Hours NUMBER NOT NULL,
    Execution_Time NUMBER NOT NULL,
    Responsible_Employee_ID NUMBER NOT NULL,
    Price NUMBER NOT NULL
);

-- Table SupplierItems
CREATE TABLE SupplierItems (
    Supplier_Item_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Supplier_ID NUMBER NOT NULL,
    Item_ID NUMBER NOT NULL,
    Price NUMBER NOT NULL,
    Availability VARCHAR2(10) NOT NULL
);

-- Table Suppliers
CREATE TABLE Suppliers (
    Supplier_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(20),
    Contact_Info VARCHAR2(20) NOT NULL,
    Best_Selling_Item_ID NUMBER NULL
);

-- Table Vouchers
CREATE TABLE Vouchers (
    Voucher_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Customer_ID NUMBER NOT NULL,
    Amount NUMBER NOT NULL,
    Valid_Until DATE NOT NULL
);

-- Table Warehouses
CREATE TABLE Warehouses (
    Warehouse_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(15) NOT NULL UNIQUE,
    Address VARCHAR2(50) NOT NULL,
    Location CHAR(10) NOT NULL
);

-- Table Zones
CREATE TABLE Zones (
    Zone_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Capacity NUMBER NOT NULL,
    Warehouse_ID NUMBER NOT NULL
);

-- Add Foreign Key Constraints

-- Items
ALTER TABLE Items ADD CONSTRAINT Primary_Supplier_ID_FK FOREIGN KEY (Primary_Supplier_ID)
REFERENCES Suppliers (Supplier_ID);

-- OrderItem
ALTER TABLE OrderItem ADD CONSTRAINT FK_Item_ID FOREIGN KEY (FK_Item_ID)
REFERENCES Items (Item_ID);
ALTER TABLE OrderItem ADD CONSTRAINT FK_Order_ID FOREIGN KEY (FK_Order_ID)
REFERENCES Orders (Order_ID);

-- Orders
ALTER TABLE Orders ADD CONSTRAINT Customer_ID_FK FOREIGN KEY (Customer_ID)
REFERENCES Customers (Customer_ID);

-- Products
ALTER TABLE Products ADD CONSTRAINT Product_Warehouse_ID_FK FOREIGN KEY (Product_Warehouse_ID)
REFERENCES Warehouses (Warehouse_ID);
ALTER TABLE Products ADD CONSTRAINT Product_Zone_ID_FK FOREIGN KEY (Product_Zone_ID)
REFERENCES Zones (Zone_ID);

-- ProductPrices
ALTER TABLE ProductPrices ADD CONSTRAINT PP_Product_ID_FK FOREIGN KEY (Product_ID)
REFERENCES Products (Product_ID);

-- Services
ALTER TABLE Services ADD CONSTRAINT Responsible_Employee_ID_FK FOREIGN KEY (Responsible_Employee_ID)
REFERENCES Employees (Employee_ID);

-- SupplierItems
ALTER TABLE SupplierItems ADD CONSTRAINT Supplier_ID_FK FOREIGN KEY (Supplier_ID)
REFERENCES Suppliers (Supplier_ID);
ALTER TABLE SupplierItems ADD CONSTRAINT Item_ID_FK FOREIGN KEY (Item_ID)
REFERENCES Items (Item_ID);

-- Vouchers
ALTER TABLE Vouchers ADD CONSTRAINT FK_Customer_ID FOREIGN KEY (Customer_ID)
REFERENCES Customers (Customer_ID);

-- Zones
ALTER TABLE Zones ADD CONSTRAINT Warehouse_ID_FK FOREIGN KEY (Warehouse_ID)
REFERENCES Warehouses (Warehouse_ID);
